---
swagger: "2.0"
info:
  description: "This is a sample Petstore server.  You can find \nout more about Swagger at \n[http://swagger.io](http://swagger.io) or on \n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n"
  version: 1.0.0
  title: Overture
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /KatChen/Overture/1.0.0
tags:
- name: Article
- name: Category
- name: Label
  description: Everything about your blog
schemes:
- https
- http
paths:
  /article:
    get:
      tags:
      - Article
      summary: Get all Article
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Article'
  /article/{articleId}:
    get:
      tags:
      - Article
      summary: Find Article by ID
      parameters:
      - name: articleId
        in: path
        description: ID of article to return
        required: true
        type: integer
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Article'
        "400":
          description: Invalid status value
    post:
      tags:
      - Article
      summary: Updates an Article by ID
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      - application/xml
      parameters:
      - name: articleId
        in: path
        description: ID of pet that needs to be updated
        required: true
        type: string
      responses:
        "200":
          description: successful operation
        "404":
          description: article id not found
    delete:
      tags:
      - Article
      summary: Delete Article by ID
      parameters:
      - name: articleId
        in: path
        description: ID of article to return
        required: true
        type: integer
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid status value
  /article/{artilceId}/uploadMainImage:
    post:
      tags:
      - Article
      summary: Uploads an Main image of an Article
      operationId: uploadMainImage
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: artilceId
        in: path
        description: ID of Article to update
        required: true
        type: string
      - name: additionalMetadata
        in: formData
        description: Additional data to pass to server
        required: false
        type: string
      - name: file
        in: formData
        description: file to upload
        required: false
        type: file
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
  /category:
    get:
      tags:
      - Category
      summary: Get all Category
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
  /category/{categoryId}:
    get:
      tags:
      - Category
      summary: Get a Category's name
      parameters:
      - name: categoryId
        in: path
        description: Find out a Category's name
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Category'
    post:
      tags:
      - Category
      summary: Update a Category's name
      parameters:
      - name: categoryId
        in: path
        description: ID of Category that needs to be updated
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Category'
    delete:
      tags:
      - Category
      summary: Delete a Category (must be empty)
      parameters:
      - name: categoryId
        in: path
        description: ID of Category that needs to be updated
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
  /label:
    get:
      tags:
      - Label
      summary: Get all Labels
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Label'
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Article:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      content:
        type: string
      updateTime:
        type: number
      img:
        type: string
      author:
        type: string
      stauts:
        type: string
        enum:
        - draft
        - published
        - archieved
        - deleted
  Category:
    type: object
    properties:
      name:
        type: string
  Label:
    type: object
    properties:
      name:
        type: string
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
